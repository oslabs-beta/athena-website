"use strict";(self.webpackChunkathena_website=self.webpackChunkathena_website||[]).push([[9757],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),l=u(n),m=r,f=l["".concat(s,".").concat(m)]||l[m]||d[m]||i;return n?o.createElement(f,c(c({ref:t},p),{},{components:n})):o.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=m;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[l]="string"==typeof e?e:r,c[1]=a;for(var u=2;u<i;u++)c[u]=n[u];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8074:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:3},c="Mock HTTP Requests",a={unversionedId:"editing-your-component/Mock HTTP Requests",id:"editing-your-component/Mock HTTP Requests",title:"Mock HTTP Requests",description:"AthenaJS includes fetch-mock integration, for a detailed look into how the fetch-mock library works, check out their documentation  here .",source:"@site/docs/editing-your-component/Mock HTTP Requests.md",sourceDirName:"editing-your-component",slug:"/editing-your-component/Mock HTTP Requests",permalink:"/athena-website/docs/editing-your-component/Mock HTTP Requests",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Editing Components",permalink:"/athena-website/docs/editing-your-component/Edit Components"},next:{title:"Styling Components",permalink:"/athena-website/docs/editing-your-component/Styling Components"}},s={},u=[{value:"When to use this feature",id:"when-to-use-this-feature",level:3}],p={toc:u},l="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mock-http-requests"},"Mock HTTP Requests"),(0,r.kt)("p",null,"AthenaJS includes fetch-mock integration, for a detailed look into how the fetch-mock library works, check out their documentation ",(0,r.kt)("a",{href:"https://www.wheresrhys.co.uk/fetch-mock/#aboutintroduction"}," here "),"."),(0,r.kt)("h3",{id:"when-to-use-this-feature"},"When to use this feature"),(0,r.kt)("p",null,"If your component uses the 'Fetch' method to GET, POST, DELETE, etc... data from a backend, Web API or some other source, you can use the Mock Server tab in the 'Edit Component' window to mock the response.  By default, we set up the mock server to intercept all requests and respond with the object {data: 'mock data'}. Check out the documentation linked above if you you want to learn how to configure your 'Mock server' in more detail."))}d.isMDXComponent=!0}}]);